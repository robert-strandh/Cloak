(cl:in-package #:cloak)

(defclass standard-triangle (triangle)
  ((%x1 :initarg :x1 :reader x1)
   (%y1 :initarg :y1 :reader y1)
   (%x2 :initarg :x2 :reader x2)
   (%y2 :initarg :y2 :reader y2)
   (%x3 :initarg :x3 :reader x3)
   (%y3 :initarg :y3 :reader y3)))

(defun area-of-triangle (triangle)
  (let ((x1 (x1 triangle))
	(y1 (y1 triangle))
	(x2 (x2 triangle))
	(y2 (y2 triangle))
	(x3 (x3 triangle))
	(y3 (y3 triangle)))
    (* 0.5d0
       (abs (- (* (- x2 x1) (- y3 y1))
	       (* (- x3 x1) (- y2 y1)))))))
